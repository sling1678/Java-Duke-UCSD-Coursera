import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

/**
 * 
 * @author sling
 *
 * This assignments:
 * Write a new class WordLengths that has the following methods
 * 
 * Method void countWordLengths(String filename, int[] counts) that reads the file and 
 * computes the number of words of various lengths. Rules for counting lengths:
 * (1) ignore first or last character if that is not a letter - this will skip quotes
 * (2) there would be more complicated rules in a real program, but ignore those complications.
 * (3) for any words that are larger than the length of array counts[], then count that word 
 * in the counts[count.length-1] element.
 * 
 * Method void testCountWordLengths() should create a FileReader o you can select a file, and 
 * creates a counts integer array of size 31. This method should call countWordLengths 
 * with a file and then print the number of words of each length. Test it on the small 
 * file smallHamlet.txt shown below.
 * 
 * Method indexOfMax(int[] values) that returns the index element of the largest element 
 * in the values. Use this in the testCountWordLengths() to determine the most common word 
 * length in the file. Test this on file smallHamlet.txt.
 */



public class WordLengths {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		WordLengths wl = new WordLengths();
		
		int [] counts = new int[13];
		wl.countWordLengths("src/Files/smallHamlet.txt", counts);
		
		
	}
	
	public void countWordLengths(String filename, int[] counts){
		//First make BufferedReader to read one line at a time.
		
        String line = null;
        StringBuffer fileRead  = new StringBuffer();
		
		try {
            // FileReader reads text files in the default encoding.
            // FileReader fileReader = new FileReader(fileName);
            // Wrap FileReader in BufferedReader.
            BufferedReader bufferedReader = new BufferedReader(new FileReader(filename));

            while((line = bufferedReader.readLine()) != null) {
               // System.out.println(line);
            	fileRead.append( line );
            	fileRead.append( "\n" ); //need to put back end of line character.
            }             
            bufferedReader.close();   // Always close files.      
        }
        catch(FileNotFoundException ex) {
            System.out.println( "Unable to open file '" + filename + "'");                
        }
        catch(IOException ex) {
            System.out.println( "Error reading file '" + filename + "'");                  
            // Or we could just do this: ex.printStackTrace();
        }// end try/catch block		
		
		System.out.print(fileRead.toString());
		
		
	}//end countWordLengths()
	
	
	
	

}
